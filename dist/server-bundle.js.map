{"version":3,"file":"server-bundle.js","mappings":"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","sources":["webpack://llm-mentor/./src/background.ts"],"sourcesContent":["// background.tsx\r\nimport {  ChromeMessage, APIResponse, HistoryItem, MemoryProfile, ApiRequest } from './types'; // Correct import\r\n\r\n\r\nlet lastRequest: ApiRequest | null = null;\r\nlet isSidebarOpen = true;\r\n\r\n\r\nconst normalizeText = (text: string): string => {\r\n  return text.trim().replace(/\\s+/g, ' ');\r\n};\r\n\r\n\r\nconst isRequestDuplicate = (current: ApiRequest, last: ApiRequest | null): boolean => {\r\n  if (!last) return false;\r\n\r\n  const currentPrompt = normalizeText(current.messages[current.messages.length - 1].content);\r\n  const lastPrompt = normalizeText(last.messages[last.messages.length - 1].content);\r\n\r\n  return currentPrompt === lastPrompt &&\r\n    current.model === last.model &&\r\n    current.maxTokens === last.maxTokens &&\r\n    current.temperature === last.temperature &&\r\n    current.url === last.url &&\r\n    JSON.stringify(current.messages.slice(0, -1)) === JSON.stringify(last.messages.slice(0, -1));\r\n};\r\n\r\n\r\n\r\nconst calculateAverageResponseTime = async (model: string, maxTokens: number): Promise<number> => {\r\n  const result = await chrome.storage.local.get(['history']);\r\n  const history = result.history || {};\r\n  const relevantRequests: HistoryItem[] = Object.values(history).flat() as HistoryItem[];\r\n\r\n\r\n  if (!relevantRequests || relevantRequests.length === 0) return 5; // Default expectation\r\n\r\n\r\n  const totalTime = relevantRequests.reduce((acc, curr) => acc + curr.requestTime, 0);\r\n  return totalTime / relevantRequests.length;\r\n};\r\n\r\n\r\n\r\nchrome.runtime.onMessage.addListener((message: ChromeMessage, sender, sendResponse) => {\r\n  console.log(\"Message received in background:\", message);\r\n\r\n\r\n  if (message.type === 'API_CALL') {\r\n    const apiRequest: ApiRequest = {\r\n        type: message.type,\r\n        model: message.model || '',\r\n        url: message.url || '',\r\n        messages: message.messages || [],\r\n        maxTokens: message.maxTokens,\r\n        temperature: message.temperature,\r\n        timestamp: new Date()\r\n    };\r\n\r\n    if (isRequestDuplicate(apiRequest, lastRequest)) {\r\n      console.log(\"Duplicate request detected, returning cached response\");\r\n      if (lastRequest?.response) {\r\n        sendResponse({ success: true, data: lastRequest.response, cached: true });\r\n      } else {\r\n        sendResponse({ success: false, error: 'Cached response not available' });\r\n      }\r\n      return true;\r\n    }\r\n\r\n\r\n    lastRequest = { ...apiRequest, response: null };\r\n    const startTime = Date.now();\r\n\r\n    if (!message.url) {\r\n        sendResponse({ success: false, error: 'URL is required' });\r\n        return true;\r\n    }\r\n\r\n    fetch(message.url, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        model: message.model,\r\n        messages: message.messages,\r\n        max_tokens: message.max_tokens,\r\n        temperature: message.temperature\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const requestTime = (Date.now() - startTime) / 1000;\r\n        data.requestTime = requestTime;\r\n        if (lastRequest) {\r\n          lastRequest.response = data;\r\n        }\r\n        sendResponse({ success: true, data, cached: false });\r\n      })\r\n      .catch(error => {\r\n        lastRequest = null;\r\n        sendResponse({ success: false, error: error.message });\r\n      });\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  if (message.type === 'SAVE_HISTORY') {\r\n    const date = new Date(message.data.timestamp);\r\n    const fileName = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}.json`;\r\n\r\n    chrome.storage.local.get(['history'], (result) => {\r\n      const history = result.history || {};\r\n      if (!history[fileName]) {\r\n        history[fileName] = [];\r\n      }\r\n      history[fileName].push(message.data);\r\n      chrome.storage.local.set({ history }, () => sendResponse({ success: true }));\r\n    });\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n\r\n\r\n  if (message.type === 'GET_AVG_RESPONSE_TIME') {\r\n    calculateAverageResponseTime(message.model || '', message.maxTokens || 0) // provide defaults\r\n      .then(avgTime => {\r\n        sendResponse({ success: true, avgTime });\r\n      });\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n\r\n\r\n  if (message.type === 'GET_AVAILABLE_MODELS') {\r\n    const models = ['model-a', 'model-b', 'model-c']; // Replace with actual models retrieved according to selected provider\r\n    sendResponse({ success: true, models });\r\n    return true;\r\n  }\r\n\r\n\r\n\r\n  if (message.type === 'PURGE_HISTORY') {\r\n    chrome.storage.local.remove('history').then(() => {\r\n      sendResponse({ success: true });\r\n    });\r\n    return true;\r\n  }\r\n\r\n\r\n  if (message.type === 'DELETE_HISTORY_ITEM') {\r\n    chrome.storage.local.get(['history'], (result) => {\r\n      const history = result.history || {};\r\n\r\n      Object.keys(history).forEach((dateKey) => {\r\n        history[dateKey] = history[dateKey].filter((item: any) => item.id !== message.id);\r\n      });\r\n\r\n      chrome.storage.local.set({ history }, () => sendResponse({ success: true }));\r\n    });\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n\r\n  if (message.type === 'GET_HISTORY') {\r\n    chrome.storage.local.get(['history'], (result) => {\r\n      const history: Record<string, HistoryItem[]> = result.history || {};\r\n      let allItems: HistoryItem[] = [];\r\n\r\n      Object.values(history).forEach((items: HistoryItem[]) => {\r\n        if (Array.isArray(items)) {\r\n            allItems = allItems.concat(items);\r\n        }\r\n      });\r\n      \r\n      sendResponse({ success: true, data: allItems });\r\n    });\r\n    return true;\r\n  }\r\n\r\n\r\n\r\n\r\n      if (message.type === 'GET_MEMORY_PROFILES') {\r\n\r\n        chrome.storage.local.get(['memoryProfiles'], (result) => {\r\n          const profiles = result.memoryProfiles || [];\r\n          sendResponse({ success: true, profiles: profiles as MemoryProfile[] }); // Type cast here\r\n        });\r\n\r\n      return true;\r\n    }\r\n\r\n});\r\n\r\n\r\nchrome.action.onClicked.addListener(() => {\r\n  if (isSidebarOpen) {\r\n    chrome.sidePanel.setOptions({ path: '' });\r\n    isSidebarOpen = false;\r\n  } else {\r\n    chrome.sidePanel.setOptions({ path: 'sidebar.html' });\r\n    isSidebarOpen = true;\r\n  }\r\n});\r\n"],"names":[],"sourceRoot":""}